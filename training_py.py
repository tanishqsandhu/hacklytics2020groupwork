# -*- coding: utf-8 -*-
"""training.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mWla3h96qBOMz4DCWYulEDPYiK6XMnLn
"""

# Commented out IPython magic to ensure Python compatibility.
#author: Hongrui Lyu
# %matplotlib inline
import numpy as np
import pandas as pd
import sklearn.linear_model as skl
import matplotlib.pyplot as plt

"""# **Read the data from files**"""

data = pd.read_csv('ebola1-cleaned-by-country2.csv', header = 0)
data.head()

"""# **Group the data by countries, and calculating the average increasing rate. 
# Plotting the graph**
"""

country_list = []
rate_list = []
health_care_level = []
for item in list(data.Country.unique()):
  country_list.append(item)
  temp = data.loc[data.Country == item]
  values =  temp.loc[:,'Value'].str.replace(",", "")
  temp['diff'] = values.astype('float').diff()
  rate_list.append(temp.loc[:,'diff'].mean())
  health_care_level.append(temp.iloc[0,6])
data2 = pd.DataFrame({"Health_care_level":health_care_level,'Avg increasing rate':rate_list}, index = country_list)
data2

fig = plt.figure()
ax1 = fig.add_subplot(111)
ax1.scatter(data2.iloc[:, 0], data2.iloc[:, 1])

"""# **Trying to see if there is a linear relationship between them**"""

data2.corr()

"""# **Create linear model and fit the data**"""

training = skl.LinearRegression()

x = data2.loc[:,'Health_care_level']
y = data2.loc[:,'Avg increasing rate']

training.fit(x[:, np.newaxis], y)

training.coef_

training.intercept_

"""Plotting the answer"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
regression_case = np.linspace(0, 2)
fig = plt.figure()
ax2 = fig.add_subplot(111)
ax2.scatter(data2.iloc[:, 0], data2.iloc[:, 1])
ax2.scatter(regression_case[:, np.newaxis], training.predict(regression_case[:,np.newaxis]), color = 'r')